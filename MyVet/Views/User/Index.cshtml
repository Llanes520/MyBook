@using Common.Utils.Enums
@using static Common.Utils.Constant.Const

@{
    ViewData["Title"] = "Mis Libros";

    var idRols = User.Claims.FirstOrDefault(x => x.Type == TypeClaims.IdRol).Value;

    bool isAdmin = idRols.Any(x => x.ToString() == Convert.ToInt32(Enums.RolUser.Administrador).ToString());
    bool isStandar = idRols.Any(x => x.ToString() == Convert.ToInt32(Enums.RolUser.Estandar).ToString());
}

@if (isAdmin)
{
    <h1>Listado de Usuarios</h1>


<p>

    <button class="btn btn-primary" onclick="nuevoUsuario()">

        <i class="far fa-book"></i> Nuevo Usuario
    </button>
</p>

<div class="row">

    <table class="table">
        <thead class="thead-dark">
            <tr>
                <th scope="col">Nombre</th>
                <th scope="col">Apellido</th>
                <th scope="col">Correo</th>
                <th scope="col">Opciones</th>
            </tr>
        </thead>

        <tbody id="cuerpoUser"></tbody>
    </table>

</div>



<div class="modal fade" id="modalUser" tabindex="1" role="dialog" aria-labelledby="modalPetLabel" aria-hidden="true">

    <div class="modal-dialog modal-dialog-centered modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="idTituloModalUser">Crear Usuario</h5>
            </div>
            <div class="modal-body">
                <form>

                    <div class="row">
                        <div class="col-md-6 form-group">
                            <label for="recipient-name" class="col-form-label">Titulo</label>
                            <input type="text" class="form-control" id="txtName" placeholder="Nombre" required>
                        </div>
                        <div class="col-md-6 form-group">
                            <label for="recipient-name" class="col-form-label">Sipnosis</label>
                            <input type="text" class="form-control" id="txtLastName" placeholder="Apellido" required>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-6 form-group">
                            <label for="recipient-name" class="col-form-label">Sipnosis</label>
                            <input type="text" class="form-control" id="txtEmail" placeholder="Correo Electronico" required>
                        </div>
                        <div class="col-md-6 form-group">
                            <label for="recipient-name" class="col-form-label">Sipnosis</label>
                            <input type="text" class="form-control" id="txtPasword" placeholder="Contraseña" required>
                        </div>
                    </div>



                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-danger" data-dismiss="modal">
                    <i class="fas fa-window-close"></i>
                    Cancelar
                </button>
                <button type="button" class="btn btn-success" onclick="guardarUsuario()">
                    <i class="far fa-save"></i>
                    Guardar
                </button>
            </div>
        </div>
    </div>
</div>

@section Scripts{
  @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

<script type="text/javascript" charset="utf-8">
   
    var listaUser= [];
    let idUser='';
    let User='';
    $(document).ready(function () {

       getAllUser();

    });
    function getAllUser() {
        modalProcesando(true);
        $.ajax({
            url: '@Url.Action("GetAllUser", "User")',
            method: 'GET',
            dataType: "json",
            success: function (data) {
                modalProcesando(false);
                console.log(data);
                if(data.isSuccess)
                {
                    listaUser=data.result;
                    cargarGridUser(listaUser);
                    console.log(listaUser);
                }else{
                    Swal.fire(
                                'Opps!',
                                data.message,
                                'error');
                }

            },
            error: function (xhr, textStatus, errorThrown) {
                    modalProcesando(false);
                    console.error(xhr, textStatus, errorThrown);
                }
         });
    }
    function cargarGridUser(data){
        console.log(data);

        $("#cuerpoUser").html("");
        for(var i=0; i<data.length ; i++){
            var tr=`
             <tr>
                <th>`+ data[i].name + `</th>
                <th> `+ data[i].lastName +`</th>
                <th> `+ data[i].email +`</th>
                <td>
                <button  class="btn btn-warning" onclick="editarBook(`+ data[i].idUser +`)"><i class="fas fa-edit"></i> Editar</button>
                <button class="btn btn-danger" onclick="eliminarUser(`+ data[i].idUser +`)"><i class="far fa-trash-alt"></i> Eliminar</button>
                </td>
            </tr>
            `;
            $("#cuerpoUser").append(tr);
        }
    }
    function eliminarUser(idUser){

        console.log("mandó a eliminar", idUser);
        Swal.fire({
            title: '¿Confirmar Eliminacion?',
            text: "No podrás revertir esto.!",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            cancelButtonText: 'Cancelar',
            confirmButtonText: 'Si, Eliminar!',
        }).then((result) => {
            if (result.isConfirmed) {
                modalProcesando(true);
                //petición
                $.ajax({
                    url: '@Url.Action("DeleteUser", "User")',
                    method: 'DELETE',
                    data:{
                        idUser:idUser
                    },
                    dataType: "json",
                    success: function (data) {
                        modalProcesando(false);
                        console.log(data);
                        if (data.isSuccess){
                            //listaBook=listaBook.filter(x=>x.id!=idBook);
                            getAllUser();
                            Swal.fire(
                                'Eliminado!',
                                data.message,
                                'success');
                        }else{
                            Swal.fire(
                                'Error!',
                                data.message,
                                'error');
                        }
                     },
                     error: function (xhr, textStatus, errorThrown) {
                         modalProcesando(false);
                         console.error(xhr, textStatus, errorThrown);
                     }
                  });
                }
            });
        }

    function nuevoUsuario(){
       $('#idTituloModalUser').html("Crear Usuario");
       $('#modalUser').modal({keyboard:true});
    }

    function guardarUsuario(){
        if(validarForm())
        {
            let parametro={
                name:$("#txtName").val(),
                lastName:$("#txtLastName").val(),
                email:$("#txtEmail").val(),
                password:$("#txtPasword").val(),
            };
            console.log(idUser);
            if(User=='')
            {
                modalProcesando(true);
                $.ajax({
                    url: '@Url.Action("InsertUser", "User")',
                    method: 'POST',
                    data:parametro,
                    dataType: "json",
                    success: function (data) {
                        modalProcesando(false);
                        console.log(listaUser);
                        if (data){
                            $('#modalUser').modal('hide');
                            limpiarForm();
                            toastMessage('success','Usuario guardado exitosamente!');
                            getAllUser();
                        }else{
                             toastMessage('error','Hubo un error al guardar, por favor intentarlo nuevamente!');
                        }
                    },
                    error: function (xhr, textStatus, errorThrown) {
                            modalProcesando(false);
                            toastMessage('error','Hubo un error al guardar, por favor intentarlo nuevamente!');
                            console.error(xhr, textStatus, errorThrown);
                        }
                 });
            }else{
                parametro.idUser=User;
                console.log(parametro);
                console.log('actualizar');
                modalProcesando(true);
                $.ajax({
                    url: '@Url.Action("UpdateUser", "User")',
                    method: 'PUT',
                    data:parametro,
                    dataType: "json",
                    success: function (data) {
                        modalProcesando(false);
                        console.log(listaUser);
                        if (data){
                            $('#modalUser').modal('hide');
                            limpiarForm();
                            toastMessage('success','Usuario guardado exitosamente!');
                            getAllUser();
                        }else{
                             toastMessage('error','Hubo un error al guardar, por favor intentarlo nuevamente!');
                        }
                    },
                    error: function (xhr, textStatus, errorThrown) {
                            modalProcesando(false);
                            toastMessage('error','Hubo un error al guardar, por favor intentarlo nuevamente!');
                            console.error(xhr, textStatus, errorThrown);
                        }
                 });
            }
        }
    }
    function validarForm(){
        if($("#txtName").val()=='')
        {
                $("#txtName").focus();
                toastMessage('warning','El nombre es obligatorio.');
                return false;
        }
        if($("#txtLastName").val()=='')
        {
                $("#txtLastName").focus();
                toastMessage('warning','El apellido es obligatorio.');
                return false;
        }
        if($("#txtEmail").val()=='')
        {
                $("#txtEmail").focus();
                toastMessage('warning','El correo es obligatorio.');
                return false;
        }
        if($("#txtPasword").val()=='')
        {
                $("#txtPasword").focus();
                toastMessage('warning','La contraseña es obligatoria.');
                return false;
        }
       
        return true;
    }
    function limpiarForm(){
       $("#txtName").val('');
       $("#txtLastName").val('');
       $("#txtEmail").val('');
       $("#txtPasword").val('');
       idBook='';
    }
    function editarBook(idUser){
        User=idUser;
        let Users= listaUser.find(x=>x.idUser==User);
        $('#txtName').val(Users.name);
        $('#txtLastName').val(Users.lastName)
        $('#txtEmail').val(Users.email)
        $('#txtPasword').val(Users.password)


       $('#idTituloModalUser').html("Editar Usuario");
       $('#modalUser').modal({keyboard:true});
    }
</script>
}
}

else
{
    @section Scripts{
        <script type="text/javascript" charset="utf-8">
              $(document).ready(function () {
                    Swal.fire(
                                 '¡Usuario no Autorizado!',
                                 'No tiene suficientes privilegios para ver esta sección.',
                                 'error');
              });
        </script>
     }
}